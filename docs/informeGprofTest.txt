Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00  1653411     0.00     0.00  __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  0.00      0.00     0.00      889     0.00     0.00  mult(double**, int, int, double**, int, int, double**)
  0.00      0.00     0.00      632     0.00     0.00  double**&& std::forward<double**>(std::remove_reference<double**>::type&)
  0.00      0.00     0.00      343     0.00     0.00  R_z(double, double**)
  0.00      0.00     0.00      316     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.00      0.00     0.00      258     0.00     0.00  mult3(double**, int, int, double**, int, int, double**, int, int, double**)
  0.00      0.00     0.00      256     0.00     0.00  R_x(double, double**)
  0.00      0.00     0.00      215     0.00     0.00  norm(double*, int)
  0.00      0.00     0.00      173     0.00     0.00  MeanObliquity(double)
  0.00      0.00     0.00      173     0.00     0.00  R_y(double, double**)
  0.00      0.00     0.00      173     0.00     0.00  NutAngles(double, double&, double&)
  0.00      0.00     0.00      158     0.00     0.00  void (*&std::forward<void (*&)(double, double**, double**)>(std::remove_reference<void (*&)(double, double**, double**)>::type&))(double, double**, double**)
  0.00      0.00     0.00      119     0.00     0.00  dot(double*, int, double*, int)
  0.00      0.00     0.00      101     0.00     0.00  transpose(double**, double**, int, int)
  0.00      0.00     0.00       95     0.00     0.00  Legendre(int, int, double, double**, double**)
  0.00      0.00     0.00       94     0.00     0.00  AccelHarmonic(double**, double**, int, int, double**)
  0.00      0.00     0.00       88     0.00     0.00  Frac(double)
  0.00      0.00     0.00       87     0.00     0.00  EqnEquinox(double)
  0.00      0.00     0.00       87     0.00     0.00  gmst(double)
  0.00      0.00     0.00       86     0.00     0.00  gast(double)
  0.00      0.00     0.00       85     0.00     0.00  PoleMatrix(double, double, double**)
  0.00      0.00     0.00       85     0.00     0.00  PrecMatrix(double, double, double**)
  0.00      0.00     0.00       85     0.00     0.00  IERS(double**, double, double&, double&, double&, double&)
  0.00      0.00     0.00       85     0.00     0.00  timediff(double, double, double&, double&, double&, double&, double&)
  0.00      0.00     0.00       85     0.00     0.00  GHAMatrix(double, double**)
  0.00      0.00     0.00       85     0.00     0.00  NutMatrix(double, double**)
  0.00      0.00     0.00       80     0.00     0.00  Accel(double, double**, double**)
  0.00      0.00     0.00       79     0.00     0.00  std::_Function_base::_M_empty() const
  0.00      0.00     0.00       79     0.00     0.00  std::function<void (double, double**, double**)>::operator()(double, double**, double**) const
  0.00      0.00     0.00       79     0.00     0.00  std::_Any_data::_M_access() const
  0.00      0.00     0.00       79     0.00     0.00  void (* const&std::_Any_data::_M_access<void (*)(double, double**, double**)>() const)(double, double**, double**)
  0.00      0.00     0.00       79     0.00     0.00  std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&)
  0.00      0.00     0.00       79     0.00     0.00  std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&)
  0.00      0.00     0.00       79     0.00     0.00  std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&)
  0.00      0.00     0.00       79     0.00     0.00  void (* const*std::__addressof<void (* const)(double, double**, double**)>(void (* const&)(double, double**, double**)))(double, double**, double**)
  0.00      0.00     0.00       79     0.00     0.00  void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&)
  0.00      0.00     0.00       70     0.00     0.00  cross(double*, double*, double*)
  0.00      0.00     0.00       43     0.00     0.00  sign_(double, double)
  0.00      0.00     0.00       42     0.00     0.00  double const& std::min<double>(double const&, double const&)
  0.00      0.00     0.00       40     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.00      0.00     0.00       23     0.00     0.00  doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&)
  0.00      0.00     0.00       12     0.00     0.00  std::remove_reference<double*&>::type&& std::move<double*&>(double*&)
  0.00      0.00     0.00        4     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double*> >, std::is_move_constructible<double*>, std::is_move_assignable<double*> >::value, void>::type std::swap<double*>(double*&, double*&)
  0.00      0.00     0.00        3     0.00     0.00  mjday(int, int, int, int, int, double)
  0.00      0.00     0.00        3     0.00     0.00  void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**)
  0.00      0.00     0.00        2     0.00     0.00  G_AccelHarmonic(double**, double**, int, int, double**)
  0.00      0.00     0.00        2     0.00     0.00  LTC(double, double, double**)
  0.00      0.00     0.00        2     0.00     0.00  Geodetic(double*, double&, double&, double&)
  0.00      0.00     0.00        2     0.00     0.00  inverMat(double**, int, int, double**)
  0.00      0.00     0.00        2     0.00     0.00  position(double, double, double, double*)
  0.00      0.00     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      0.00     0.00        2     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.00     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Any_data::_M_access()
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.00     0.00        1     0.00     0.00  MeasUpdate(double**, double, double, double, double*, double**, int, double**)
  0.00      0.00     0.00        1     0.00     0.00  TimeUpdate(double**, int, int, double**, int, int, double**, int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  AzElPa(double*, double&, double&, double*, double*)
  0.00      0.00     0.00        1     0.00     0.00  VarEqn(double, double**, double**)
  0.00      0.00     0.00        1     0.00     0.00  loadCS(char const*)
  0.00      0.00     0.00        1     0.00     0.00  DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**)
  0.00      0.00     0.00        1     0.00     0.00  loadEOP(char const*)
  0.00      0.00     0.00        1     0.00     0.00  anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*)
  0.00      0.00     0.00        1     0.00     0.00  deleteCS()
  0.00      0.00     0.00        1     0.00     0.00  deleteEOP()
  0.00      0.00     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**))
  0.00      0.00     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_not_empty_function<void (double, double**, double**)>(void (*)(double, double**, double**))
  0.00      0.00     0.00        1     0.00     0.00  void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Function_base::_Function_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Function_base::~_Function_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      0.00     0.00        1     0.00     0.00  std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**))
  0.00      0.00     0.00        1     0.00     0.00  std::function<void (double, double**, double**)>::~function()
  0.00      0.00     0.00        1     0.00     0.00  void (*&std::_Any_data::_M_access<void (*)(double, double**, double**)>())(double, double**, double**)
  0.00      0.00     0.00        1     0.00     0.00  std::setprecision(int)
  0.00      0.00     0.00        1     0.00     0.00  operator new(unsigned long, void*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00      39/1653411     DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
                0.00    0.00     414/1653411     main [6]
                0.00    0.00 1652958/1653411     IERS(double**, double, double&, double&, double&, double&) [30]
[8]      0.0    0.00    0.00 1653411         __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [8]
-----------------------------------------------
                0.00    0.00       2/889         LTC(double, double, double**) [54]
                0.00    0.00       2/889         MeasUpdate(double**, double, double, double, double*, double**, int, double**) [66]
                0.00    0.00       2/889         VarEqn(double, double**, double**) [73]
                0.00    0.00       2/889         main [6]
                0.00    0.00      12/889         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/889         Accel(double, double**, double**) [34]
                0.00    0.00      85/889         PoleMatrix(double, double, double**) [28]
                0.00    0.00     188/889         AccelHarmonic(double**, double**, int, int, double**) [23]
                0.00    0.00     516/889         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
[9]      0.0    0.00    0.00     889         mult(double**, int, int, double**, int, int, double**) [9]
-----------------------------------------------
                0.00    0.00     158/632         std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
                0.00    0.00     158/632         std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
                0.00    0.00     158/632         std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
                0.00    0.00     158/632         void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
[10]     0.0    0.00    0.00     632         double**&& std::forward<double**>(std::remove_reference<double**>::type&) [10]
-----------------------------------------------
                0.00    0.00       1/343         main [6]
                0.00    0.00       2/343         LTC(double, double, double**) [54]
                0.00    0.00      85/343         GHAMatrix(double, double**) [32]
                0.00    0.00      85/343         NutMatrix(double, double**) [33]
                0.00    0.00     170/343         PrecMatrix(double, double, double**) [29]
[11]     0.0    0.00    0.00     343         R_z(double, double**) [11]
-----------------------------------------------
                0.00    0.00      79/316         std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
                0.00    0.00      79/316         std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
                0.00    0.00      79/316         std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
                0.00    0.00      79/316         void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
[12]     0.0    0.00    0.00     316         double&& std::forward<double>(std::remove_reference<double>::type&) [12]
-----------------------------------------------
                0.00    0.00       1/258         TimeUpdate(double**, int, int, double**, int, int, double**, int, int) [67]
                0.00    0.00       1/258         VarEqn(double, double**, double**) [73]
                0.00    0.00       1/258         main [6]
                0.00    0.00       2/258         MeasUpdate(double**, double, double, double, double*, double**, int, double**) [66]
                0.00    0.00       3/258         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/258         Accel(double, double**, double**) [34]
                0.00    0.00      85/258         NutMatrix(double, double**) [33]
                0.00    0.00      85/258         PrecMatrix(double, double, double**) [29]
[13]     0.0    0.00    0.00     258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
                0.00    0.00     516/889         mult(double**, int, int, double**, int, int, double**) [9]
-----------------------------------------------
                0.00    0.00       1/256         main [6]
                0.00    0.00      85/256         PoleMatrix(double, double, double**) [28]
                0.00    0.00     170/256         NutMatrix(double, double**) [33]
[14]     0.0    0.00    0.00     256         R_x(double, double**) [14]
-----------------------------------------------
                0.00    0.00       1/215         main [6]
                0.00    0.00       2/215         Geodetic(double*, double&, double&, double&) [55]
                0.00    0.00       3/215         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      94/215         AccelHarmonic(double**, double**, int, int, double**) [23]
                0.00    0.00     115/215         doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [48]
[15]     0.0    0.00    0.00     215         norm(double*, int) [15]
-----------------------------------------------
                0.00    0.00       1/173         main [6]
                0.00    0.00      85/173         NutMatrix(double, double**) [33]
                0.00    0.00      87/173         EqnEquinox(double) [25]
[16]     0.0    0.00    0.00     173         MeanObliquity(double) [16]
-----------------------------------------------
                0.00    0.00       1/173         main [6]
                0.00    0.00       2/173         LTC(double, double, double**) [54]
                0.00    0.00      85/173         PoleMatrix(double, double, double**) [28]
                0.00    0.00      85/173         PrecMatrix(double, double, double**) [29]
[17]     0.0    0.00    0.00     173         R_y(double, double**) [17]
-----------------------------------------------
                0.00    0.00       1/173         main [6]
                0.00    0.00      85/173         NutMatrix(double, double**) [33]
                0.00    0.00      87/173         EqnEquinox(double) [25]
[18]     0.0    0.00    0.00     173         NutAngles(double, double&, double&) [18]
-----------------------------------------------
                0.00    0.00      79/158         std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
                0.00    0.00      79/158         void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
[19]     0.0    0.00    0.00     158         void (*&std::forward<void (*&)(double, double**, double**)>(std::remove_reference<void (*&)(double, double**, double**)>::type&))(double, double**, double**) [19]
-----------------------------------------------
                0.00    0.00       1/119         AzElPa(double*, double&, double&, double*, double*) [72]
                0.00    0.00       1/119         main [6]
                0.00    0.00       2/119         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00     115/119         doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [48]
[20]     0.0    0.00    0.00     119         dot(double*, int, double*, int) [20]
-----------------------------------------------
                0.00    0.00       1/101         MeasUpdate(double**, double, double, double, double*, double**, int, double**) [66]
                0.00    0.00       1/101         TimeUpdate(double**, int, int, double**, int, int, double**, int, int) [67]
                0.00    0.00       1/101         main [6]
                0.00    0.00       4/101         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      94/101         AccelHarmonic(double**, double**, int, int, double**) [23]
[21]     0.0    0.00    0.00     101         transpose(double**, double**, int, int) [21]
-----------------------------------------------
                0.00    0.00       1/95          main [6]
                0.00    0.00      94/95          AccelHarmonic(double**, double**, int, int, double**) [23]
[22]     0.0    0.00    0.00      95         Legendre(int, int, double, double**, double**) [22]
-----------------------------------------------
                0.00    0.00       1/94          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/94          main [6]
                0.00    0.00      12/94          G_AccelHarmonic(double**, double**, int, int, double**) [53]
                0.00    0.00      80/94          Accel(double, double**, double**) [34]
[23]     0.0    0.00    0.00      94         AccelHarmonic(double**, double**, int, int, double**) [23]
                0.00    0.00     188/889         mult(double**, int, int, double**, int, int, double**) [9]
                0.00    0.00      94/215         norm(double*, int) [15]
                0.00    0.00      94/95          Legendre(int, int, double, double**, double**) [22]
                0.00    0.00      94/101         transpose(double**, double**, int, int) [21]
-----------------------------------------------
                0.00    0.00       1/88          main [6]
                0.00    0.00      87/88          gmst(double) [26]
[24]     0.0    0.00    0.00      88         Frac(double) [24]
-----------------------------------------------
                0.00    0.00       1/87          main [6]
                0.00    0.00      86/87          gast(double) [27]
[25]     0.0    0.00    0.00      87         EqnEquinox(double) [25]
                0.00    0.00      87/173         NutAngles(double, double&, double&) [18]
                0.00    0.00      87/173         MeanObliquity(double) [16]
-----------------------------------------------
                0.00    0.00       1/87          main [6]
                0.00    0.00      86/87          gast(double) [27]
[26]     0.0    0.00    0.00      87         gmst(double) [26]
                0.00    0.00      87/88          Frac(double) [24]
-----------------------------------------------
                0.00    0.00       1/86          main [6]
                0.00    0.00      85/86          GHAMatrix(double, double**) [32]
[27]     0.0    0.00    0.00      86         gast(double) [27]
                0.00    0.00      86/87          gmst(double) [26]
                0.00    0.00      86/87          EqnEquinox(double) [25]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[28]     0.0    0.00    0.00      85         PoleMatrix(double, double, double**) [28]
                0.00    0.00      85/173         R_y(double, double**) [17]
                0.00    0.00      85/256         R_x(double, double**) [14]
                0.00    0.00      85/889         mult(double**, int, int, double**, int, int, double**) [9]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[29]     0.0    0.00    0.00      85         PrecMatrix(double, double, double**) [29]
                0.00    0.00     170/343         R_z(double, double**) [11]
                0.00    0.00      85/173         R_y(double, double**) [17]
                0.00    0.00      85/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[30]     0.0    0.00    0.00      85         IERS(double**, double, double&, double&, double&, double&) [30]
                0.00    0.00 1652958/1653411     __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [8]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[31]     0.0    0.00    0.00      85         timediff(double, double, double&, double&, double&, double&, double&) [31]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[32]     0.0    0.00    0.00      85         GHAMatrix(double, double**) [32]
                0.00    0.00      85/86          gast(double) [27]
                0.00    0.00      85/343         R_z(double, double**) [11]
-----------------------------------------------
                0.00    0.00       1/85          VarEqn(double, double**, double**) [73]
                0.00    0.00       1/85          main [6]
                0.00    0.00       3/85          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      80/85          Accel(double, double**, double**) [34]
[33]     0.0    0.00    0.00      85         NutMatrix(double, double**) [33]
                0.00    0.00     170/256         R_x(double, double**) [14]
                0.00    0.00      85/173         MeanObliquity(double) [16]
                0.00    0.00      85/173         NutAngles(double, double&, double&) [18]
                0.00    0.00      85/343         R_z(double, double**) [11]
                0.00    0.00      85/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
-----------------------------------------------
                0.00    0.00       1/80          main [6]
                0.00    0.00      79/80          void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
[34]     0.0    0.00    0.00      80         Accel(double, double**, double**) [34]
                0.00    0.00      80/85          IERS(double**, double, double&, double&, double&, double&) [30]
                0.00    0.00      80/85          timediff(double, double, double&, double&, double&, double&, double&) [31]
                0.00    0.00      80/85          PrecMatrix(double, double, double**) [29]
                0.00    0.00      80/85          NutMatrix(double, double**) [33]
                0.00    0.00      80/889         mult(double**, int, int, double**, int, int, double**) [9]
                0.00    0.00      80/85          PoleMatrix(double, double, double**) [28]
                0.00    0.00      80/85          GHAMatrix(double, double**) [32]
                0.00    0.00      80/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
                0.00    0.00      80/94          AccelHarmonic(double**, double**, int, int, double**) [23]
-----------------------------------------------
                0.00    0.00      79/79          std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
[35]     0.0    0.00    0.00      79         std::_Function_base::_M_empty() const [35]
-----------------------------------------------
                0.00    0.00      79/79          DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
[36]     0.0    0.00    0.00      79         std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
                0.00    0.00     158/632         double**&& std::forward<double**>(std::remove_reference<double**>::type&) [10]
                0.00    0.00      79/79          std::_Function_base::_M_empty() const [35]
                0.00    0.00      79/316         double&& std::forward<double>(std::remove_reference<double>::type&) [12]
                0.00    0.00      79/79          std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
-----------------------------------------------
                0.00    0.00      79/79          void (* const&std::_Any_data::_M_access<void (*)(double, double**, double**)>() const)(double, double**, double**) [38]
[37]     0.0    0.00    0.00      79         std::_Any_data::_M_access() const [37]
-----------------------------------------------
                0.00    0.00      79/79          std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&) [39]
[38]     0.0    0.00    0.00      79         void (* const&std::_Any_data::_M_access<void (*)(double, double**, double**)>() const)(double, double**, double**) [38]
                0.00    0.00      79/79          std::_Any_data::_M_access() const [37]
-----------------------------------------------
                0.00    0.00      79/79          std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
[39]     0.0    0.00    0.00      79         std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&) [39]
                0.00    0.00      79/79          void (* const&std::_Any_data::_M_access<void (*)(double, double**, double**)>() const)(double, double**, double**) [38]
                0.00    0.00      79/79          void (* const*std::__addressof<void (* const)(double, double**, double**)>(void (* const&)(double, double**, double**)))(double, double**, double**) [42]
-----------------------------------------------
                0.00    0.00      79/79          std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
[40]     0.0    0.00    0.00      79         std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
                0.00    0.00     158/632         double**&& std::forward<double**>(std::remove_reference<double**>::type&) [10]
                0.00    0.00      79/316         double&& std::forward<double>(std::remove_reference<double>::type&) [12]
                0.00    0.00      79/79          std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&) [39]
                0.00    0.00      79/79          std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
-----------------------------------------------
                0.00    0.00      79/79          std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&) [40]
[41]     0.0    0.00    0.00      79         std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
                0.00    0.00     158/632         double**&& std::forward<double**>(std::remove_reference<double**>::type&) [10]
                0.00    0.00      79/316         double&& std::forward<double>(std::remove_reference<double>::type&) [12]
                0.00    0.00      79/158         void (*&std::forward<void (*&)(double, double**, double**)>(std::remove_reference<void (*&)(double, double**, double**)>::type&))(double, double**, double**) [19]
                0.00    0.00      79/79          void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
-----------------------------------------------
                0.00    0.00      79/79          std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&) [39]
[42]     0.0    0.00    0.00      79         void (* const*std::__addressof<void (* const)(double, double**, double**)>(void (* const&)(double, double**, double**)))(double, double**, double**) [42]
-----------------------------------------------
                0.00    0.00      79/79          std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&) [41]
[43]     0.0    0.00    0.00      79         void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&) [43]
                0.00    0.00     158/632         double**&& std::forward<double**>(std::remove_reference<double**>::type&) [10]
                0.00    0.00      79/158         void (*&std::forward<void (*&)(double, double**, double**)>(std::remove_reference<void (*&)(double, double**, double**)>::type&))(double, double**, double**) [19]
                0.00    0.00      79/316         double&& std::forward<double>(std::remove_reference<double>::type&) [12]
                0.00    0.00      79/80          Accel(double, double**, double**) [34]
-----------------------------------------------
                0.00    0.00       1/70          main [6]
                0.00    0.00      69/70          doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [48]
[44]     0.0    0.00    0.00      70         cross(double*, double*, double*) [44]
-----------------------------------------------
                0.00    0.00       1/43          main [6]
                0.00    0.00      42/43          DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
[45]     0.0    0.00    0.00      43         sign_(double, double) [45]
-----------------------------------------------
                0.00    0.00      42/42          DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
[46]     0.0    0.00    0.00      42         double const& std::min<double>(double const&, double const&) [46]
-----------------------------------------------
                0.00    0.00      40/40          DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
[47]     0.0    0.00    0.00      40         double const& std::max<double>(double const&, double const&) [47]
-----------------------------------------------
                0.00    0.00       1/23          main [6]
                0.00    0.00      22/23          anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
[48]     0.0    0.00    0.00      23         doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [48]
                0.00    0.00     115/215         norm(double*, int) [15]
                0.00    0.00     115/119         dot(double*, int, double*, int) [20]
                0.00    0.00      69/70          cross(double*, double*, double*) [44]
-----------------------------------------------
                0.00    0.00      12/12          std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double*> >, std::is_move_constructible<double*>, std::is_move_assignable<double*> >::value, void>::type std::swap<double*>(double*&, double*&) [50]
[49]     0.0    0.00    0.00      12         std::remove_reference<double*&>::type&& std::move<double*&>(double*&) [49]
-----------------------------------------------
                0.00    0.00       4/4           inverMat(double**, int, int, double**) [56]
[50]     0.0    0.00    0.00       4         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double*> >, std::is_move_constructible<double*>, std::is_move_assignable<double*> >::value, void>::type std::swap<double*>(double*&, double*&) [50]
                0.00    0.00      12/12          std::remove_reference<double*&>::type&& std::move<double*&>(double*&) [49]
-----------------------------------------------
                0.00    0.00       3/3           main [6]
[51]     0.0    0.00    0.00       3         mjday(int, int, int, int, int, double) [51]
-----------------------------------------------
                0.00    0.00       1/3           std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**)) [88]
                0.00    0.00       1/3           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**)) [82]
                0.00    0.00       1/3           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>) [84]
[52]     0.0    0.00    0.00       3         void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**) [52]
-----------------------------------------------
                0.00    0.00       1/2           VarEqn(double, double**, double**) [73]
                0.00    0.00       1/2           main [6]
[53]     0.0    0.00    0.00       2         G_AccelHarmonic(double**, double**, int, int, double**) [53]
                0.00    0.00      12/94          AccelHarmonic(double**, double**, int, int, double**) [23]
-----------------------------------------------
                0.00    0.00       1/2           anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00       1/2           main [6]
[54]     0.0    0.00    0.00       2         LTC(double, double, double**) [54]
                0.00    0.00       2/173         R_y(double, double**) [17]
                0.00    0.00       2/343         R_z(double, double**) [11]
                0.00    0.00       2/889         mult(double**, int, int, double**, int, int, double**) [9]
-----------------------------------------------
                0.00    0.00       1/2           anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00       1/2           main [6]
[55]     0.0    0.00    0.00       2         Geodetic(double*, double&, double&, double&) [55]
                0.00    0.00       2/215         norm(double*, int) [15]
-----------------------------------------------
                0.00    0.00       1/2           MeasUpdate(double**, double, double, double, double*, double**, int, double**) [66]
                0.00    0.00       1/2           main [6]
[56]     0.0    0.00    0.00       2         inverMat(double**, int, int, double**) [56]
                0.00    0.00       4/4           std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double*> >, std::is_move_constructible<double*>, std::is_move_assignable<double*> >::value, void>::type std::swap<double*>(double*&, double*&) [50]
-----------------------------------------------
                0.00    0.00       2/2           main [6]
[57]     0.0    0.00    0.00       2         position(double, double, double, double*) [57]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [60]
[58]     0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [58]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [61]
[59]     0.0    0.00    0.00       2         std::char_traits<char>::length(char const*) [59]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [61]
[60]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [60]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [58]
                0.00    0.00       2/2           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [65]
-----------------------------------------------
                0.00    0.00       2/2           main [6]
[61]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [61]
                0.00    0.00       2/2           std::char_traits<char>::length(char const*) [59]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [60]
-----------------------------------------------
                0.00    0.00       1/2           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>) [84]
                0.00    0.00       1/2           void (*&std::_Any_data::_M_access<void (*)(double, double**, double**)>())(double, double**, double**) [90]
[62]     0.0    0.00    0.00       2         std::_Any_data::_M_access() [62]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [65]
[63]     0.0    0.00    0.00       2         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [63]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [65]
[64]     0.0    0.00    0.00       2         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [64]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [60]
[65]     0.0    0.00    0.00       2         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [65]
                0.00    0.00       2/2           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [64]
                0.00    0.00       2/2           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [63]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[66]     0.0    0.00    0.00       1         MeasUpdate(double**, double, double, double, double*, double**, int, double**) [66]
                0.00    0.00       2/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
                0.00    0.00       2/889         mult(double**, int, int, double**, int, int, double**) [9]
                0.00    0.00       1/101         transpose(double**, double**, int, int) [21]
                0.00    0.00       1/2           inverMat(double**, int, int, double**) [56]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[67]     0.0    0.00    0.00       1         TimeUpdate(double**, int, int, double**, int, int, double**, int, int) [67]
                0.00    0.00       1/101         transpose(double**, double**, int, int) [21]
                0.00    0.00       1/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z8GeodeticPdRdS0_S0_ [93]
[68]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [68]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_eopdata [95]
[69]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [69]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z9transposePPdS0_ii [94]
[70]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [70]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [96]
[71]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [71]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[72]     0.0    0.00    0.00       1         AzElPa(double*, double&, double&, double*, double*) [72]
                0.00    0.00       1/119         dot(double*, int, double*, int) [20]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[73]     0.0    0.00    0.00       1         VarEqn(double, double**, double**) [73]
                0.00    0.00       2/889         mult(double**, int, int, double**, int, int, double**) [9]
                0.00    0.00       1/85          IERS(double**, double, double&, double&, double&, double&) [30]
                0.00    0.00       1/85          timediff(double, double, double&, double&, double&, double&, double&) [31]
                0.00    0.00       1/85          PrecMatrix(double, double, double**) [29]
                0.00    0.00       1/85          NutMatrix(double, double**) [33]
                0.00    0.00       1/85          PoleMatrix(double, double, double**) [28]
                0.00    0.00       1/85          GHAMatrix(double, double**) [32]
                0.00    0.00       1/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
                0.00    0.00       1/94          AccelHarmonic(double**, double**, int, int, double**) [23]
                0.00    0.00       1/2           G_AccelHarmonic(double**, double**, int, int, double**) [53]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[74]     0.0    0.00    0.00       1         loadCS(char const*) [74]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[75]     0.0    0.00    0.00       1         DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [75]
                0.00    0.00      79/79          std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [36]
                0.00    0.00      42/43          sign_(double, double) [45]
                0.00    0.00      42/42          double const& std::min<double>(double const&, double const&) [46]
                0.00    0.00      40/40          double const& std::max<double>(double const&, double const&) [47]
                0.00    0.00      39/1653411     __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [8]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[76]     0.0    0.00    0.00       1         loadEOP(char const*) [76]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[77]     0.0    0.00    0.00       1         anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [77]
                0.00    0.00      22/23          doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [48]
                0.00    0.00      12/889         mult(double**, int, int, double**, int, int, double**) [9]
                0.00    0.00       4/101         transpose(double**, double**, int, int) [21]
                0.00    0.00       3/85          IERS(double**, double, double&, double&, double&, double&) [30]
                0.00    0.00       3/85          timediff(double, double, double&, double&, double&, double&, double&) [31]
                0.00    0.00       3/85          PrecMatrix(double, double, double**) [29]
                0.00    0.00       3/85          NutMatrix(double, double**) [33]
                0.00    0.00       3/85          PoleMatrix(double, double, double**) [28]
                0.00    0.00       3/85          GHAMatrix(double, double**) [32]
                0.00    0.00       3/258         mult3(double**, int, int, double**, int, int, double**, int, int, double**) [13]
                0.00    0.00       3/215         norm(double*, int) [15]
                0.00    0.00       2/119         dot(double*, int, double*, int) [20]
                0.00    0.00       1/2           Geodetic(double*, double&, double&, double&) [55]
                0.00    0.00       1/2           LTC(double, double, double**) [54]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[78]     0.0    0.00    0.00       1         deleteCS() [78]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[79]     0.0    0.00    0.00       1         deleteEOP() [79]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [81]
[80]     0.0    0.00    0.00       1         std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [80]
                0.00    0.00       1/1           void (*&std::_Any_data::_M_access<void (*)(double, double**, double**)>())(double, double**, double**) [90]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [87]
[81]     0.0    0.00    0.00       1         std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [81]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [80]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**)) [88]
[82]     0.0    0.00    0.00       1         void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**)) [82]
                0.00    0.00       1/3           void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**) [52]
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>) [84]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**)) [88]
[83]     0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_not_empty_function<void (double, double**, double**)>(void (*)(double, double**, double**)) [83]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**)) [82]
[84]     0.0    0.00    0.00       1         void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>) [84]
                0.00    0.00       1/3           void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**) [52]
                0.00    0.00       1/2           std::_Any_data::_M_access() [62]
                0.00    0.00       1/1           operator new(unsigned long, void*) [92]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**)) [88]
[85]     0.0    0.00    0.00       1         std::_Function_base::_Function_base() [85]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (double, double**, double**)>::~function() [89]
[86]     0.0    0.00    0.00       1         std::_Function_base::~_Function_base() [86]
                0.00    0.00       1/1           std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [87]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::~_Function_base() [86]
[87]     0.0    0.00    0.00       1         std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [87]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [81]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[88]     0.0    0.00    0.00       1         std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**)) [88]
                0.00    0.00       1/1           std::_Function_base::_Function_base() [85]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_not_empty_function<void (double, double**, double**)>(void (*)(double, double**, double**)) [83]
                0.00    0.00       1/3           void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**) [52]
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**)) [82]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[89]     0.0    0.00    0.00       1         std::function<void (double, double**, double**)>::~function() [89]
                0.00    0.00       1/1           std::_Function_base::~_Function_base() [86]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [80]
[90]     0.0    0.00    0.00       1         void (*&std::_Any_data::_M_access<void (*)(double, double**, double**)>())(double, double**, double**) [90]
                0.00    0.00       1/2           std::_Any_data::_M_access() [62]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[91]     0.0    0.00    0.00       1         std::setprecision(int) [91]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>) [84]
[92]     0.0    0.00    0.00       1         operator new(unsigned long, void*) [92]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [25] EqnEquinox(double)     [73] VarEqn(double, double**, double**) [85] std::_Function_base::_Function_base()
  [66] MeasUpdate(double**, double, double, double, double*, double**, int, double**) [74] loadCS(char const*) [86] std::_Function_base::~_Function_base()
  [28] PoleMatrix(double, double, double**) [75] DEInteg(std::function<void (double, double**, double**)>, double, double, double, double, int, double**) [87] std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  [29] PrecMatrix(double, double, double**) [48] doubler(double, double, double, double, double, double, double*, double*, double*, double*, double*, double*, double, double, char, double*, double*, double&, double&, double&, double&, double&, double&, double&) [40] std::_Function_handler<void (double, double**, double**), void (*)(double, double**, double**)>::_M_invoke(std::_Any_data const&, double&&, double**&&, double**&&)
  [67] TimeUpdate(double**, int, int, double**, int, int, double**, int, int) [76] loadEOP(char const*) [60] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  [23] AccelHarmonic(double**, double**, int, int, double**) [55] Geodetic(double*, double&, double&, double&) [61] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [16] MeanObliquity(double)  [22] Legendre(int, int, double, double**, double**) [88] std::function<void (double, double**, double**)>::function<void (*)(double, double**, double**), void>(void (*&&)(double, double**, double**))
  [53] G_AccelHarmonic(double**, double**, int, int, double**) [77] anglesdr(double**, double, double, double, double, double, double, double, double, double, double*, double*, double*, double*, double*) [89] std::function<void (double, double**, double**)>::~function()
  [54] LTC(double, double, double**) [78] deleteCS()      [62] std::_Any_data::_M_access()
  [14] R_x(double, double**)  [56] inverMat(double**, int, int, double**) [90] void (*&std::_Any_data::_M_access<void (*)(double, double**, double**)>())(double, double**, double**)
  [17] R_y(double, double**)  [57] position(double, double, double, double*) [63] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  [11] R_z(double, double**)  [31] timediff(double, double, double&, double&, double&, double&, double&) [41] std::enable_if<is_invocable_r_v<void, void (*&)(double, double**, double**), double, double**, double**>, void>::type std::__invoke_r<void, void (*&)(double, double**, double**), double, double**, double**>(void (*&)(double, double**, double**), double&&, double**&&, double**&&)
  [20] dot(double*, int, double*, int) [32] GHAMatrix(double, double**) [42] void (* const*std::__addressof<void (* const)(double, double**, double**)>(void (* const&)(double, double**, double**)))(double, double**, double**)
  [68] __static_initialization_and_destruction_0(int, int) [18] NutAngles(double, double&, double&) [91] std::setprecision(int)
  [69] __static_initialization_and_destruction_0(int, int) [33] NutMatrix(double, double**) [43] void std::__invoke_impl<void, void (*&)(double, double**, double**), double, double**, double**>(std::__invoke_other, void (*&)(double, double**, double**), double&&, double**&&, double**&&)
  [70] __static_initialization_and_destruction_0(int, int) [79] deleteEOP() [64] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  [71] __static_initialization_and_destruction_0(int, int) [21] transpose(double**, double**, int, int) [47] double const& std::max<double>(double const&, double const&)
  [24] Frac(double)           [58] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [46] double const& std::min<double>(double const&, double const&)
  [30] IERS(double**, double, double&, double&, double&, double&) [35] std::_Function_base::_M_empty() const [8] __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  [27] gast(double)           [36] std::function<void (double, double**, double**)>::operator()(double, double**, double**) const [49] std::remove_reference<double*&>::type&& std::move<double*&>(double*&)
  [26] gmst(double)           [37] std::_Any_data::_M_access() const [50] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double*> >, std::is_move_constructible<double*>, std::is_move_assignable<double*> >::value, void>::type std::swap<double*>(double*&, double*&)
   [9] mult(double**, int, int, double**, int, int, double**) [38] void (* const&std::_Any_data::_M_access<void (*)(double, double**, double**)>() const)(double, double**, double**) [52] void (*&&std::forward<void (*)(double, double**, double**)>(std::remove_reference<void (*)(double, double**, double**)>::type&))(double, double**, double**)
  [15] norm(double*, int)     [59] std::char_traits<char>::length(char const*) [10] double**&& std::forward<double**>(std::remove_reference<double**>::type&)
  [34] Accel(double, double**, double**) [80] std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [19] void (*&std::forward<void (*&)(double, double**, double**)>(std::remove_reference<void (*&)(double, double**, double**)>::type&))(double, double**, double**)
  [44] cross(double*, double*, double*) [81] std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [12] double&& std::forward<double>(std::remove_reference<double>::type&)
  [51] mjday(int, int, int, int, int, double) [39] std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_get_pointer(std::_Any_data const&) [65] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [13] mult3(double**, int, int, double**, int, int, double**, int, int, double**) [82] void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_init_functor<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**)) [92] operator new(unsigned long, void*)
  [45] sign_(double, double)  [83] bool std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_not_empty_function<void (double, double**, double**)>(void (*)(double, double**, double**))
  [72] AzElPa(double*, double&, double&, double*, double*) [84] void std::_Function_base::_Base_manager<void (*)(double, double**, double**)>::_M_create<void (*)(double, double**, double**)>(std::_Any_data&, void (*&&)(double, double**, double**), std::integral_constant<bool, true>)
